git config --global user.email "tommyboy3816@yahoo.com"
git config --global user.name "LBB"

git clone https://github.com/QuantumLeaps/qpcpp
git clone https://github.com/tommyboy3816/hello-world
git clone https://github.com/flipk/pfkutils/tree/master/libWebAppServer

git status

git branch create_hello_world_cc
git checkout create_hello_world_cc
git add <filename>

git commit -m "my first source file"

git merge create_hello_world_cc
git merge master

git push origin master
git push origin <branch_name>

git checkout <commit-id>
View a previous commit.
git tag -a <tag-name> -m "<description>"
Create an annotated tag pointing to the most recent commit.
git revert <commit-id>
Undo the specified commit by applying a new commit.
git reset --hard
Reset tracked files to match the most recent commit.
git clean -f
Remove untracked files.
git reset --hard / git clean -f

Permanently undo uncommitted changes.
git branch
List all branches.
git branch <branch-name>
Create a new branch using the current working directory as its base.
git checkout <branch-name>
Make the working directory and the HEAD match the specified branch.
git merge <branch-name>
Merge a branch into the checked-out branch.
git branch -d <branch-name>
Delete a branch.
git rm <file>
Remove a file from the working directory (if applicable) and stop tracking the file.

git commit -a -m "<message>"
Stage all tracked files and commit the snapshot using the specified message.
git branch -D <branch-name>
Force the removal of an unmerged branch (be careful: it will be lost forever).
